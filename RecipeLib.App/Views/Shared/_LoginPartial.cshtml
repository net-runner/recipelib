@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var action = ViewContext.RouteData.Values["Action"];
}

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">

            <a class="nav-link text-light"><i class="bi bi-person"></i>Hello
                @User.Identity?.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-controller="Account" asp-action="Logout"
            asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-light">Logout<i
                    class="bi bi-door-closed"></i></button>
            </form>
        </li>
    }

    @if ((string)action != "Register" && (string)action != "Login" && !SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
